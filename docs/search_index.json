[["index.html", "GLM Workbook Introduction GLM Information", " GLM Workbook Matt Hipsey, Dan Paraska, Peisheng Huang, Casper Boon, Giles Knight Last updated: 2022-09-29 Introduction GLM Information For GLM technical documentation, visit the glm-aed GitHub Repository wiki. For a detailed scientific overview of GLM, refer to Hipsey et al. (2019)’s paper available here. References "],["setup.html", "Setup Tools You’ll Need Case-study download Unzipping files", " Setup Tools You’ll Need Text Editor A text editor is required to edit GLM’s .nml configuration files. Simple text editors like TextEdit on MacOS or Wordpad on Windows can be used however more extensible editors like Visual Studio Code, UltraEdit or Atom are recommended. To edit the .nml file, simply right click on the file and open it in your preferred text editor. Changes to the file must be saved before running GLM. Any text with a ‘!’ before it is not read by the GLM program, but is used as a comment for the user. Excel GLM reads and writes data in CSV format. Excel can be used to edit these files (e.g. time series meteorological input data) or for plotting outputs. R R is also commonly used to manipulate and visualise GLM’s input/output data. R can be downloaded here R Studio can be downloaded here Case-study download The GLM model and two case-study simulations setup for the below exercises are available for download by clicking the download button in the tool bar . The simulation in the WarmLake directory is an example 40 m deep, monomictic lake that is used to supply drinking water and support an active fishery. The simulation in the TropicalReservoir directory is a typical water supply reservoir (drowned river valley) located in a sub-tropical climate. This simulation is polymictic, mixing variably throughout the year. Other model simulations are also available in the glm-aed GitHub repository in glm-examples directory. Unzipping files The GLM model and case study simulations featured in this workbook are distributed as a zipped file. In some cases users may erroneously be working “within” the zip without properly extracting the file and this prevents the simulation from running. Extracting these files will depend on your operating system. On MacOS, simply double click the ‘zipped’ file: On Windows, click ‘Extract All’ and follow the prompt: "],["glm-file-structure.html", "GLM File Structure GLM input files GLM output files", " GLM File Structure GLM input files GLM configuration file: glm3.nml A GLM model simulation is controlled through the main configuration file : glm3.nml. This file is read as text by the GLM program, from top to bottom. Any text with a ‘!’ before it is not read by the program, but is used as a comment for the user. The key elements of this file are depicted as ‘blocks’ and each block of configuration options and parameters is summarised in detail on this page. Each block is started with an ampersand &amp; and finished with a slash /. The blocks contain text that can be either single parameters (with units) listed parameters, for example, for every depth layer or every river inflow listed variables, for example, variables to be read in or written to the output file paths and file names configuration switches (integers or logical values) Some key inputs for setting up a GLM simulation are listed below. &amp;wq_setup:wq_lib sets an external water quality model, for example, ‘aed’. &amp;wq_setup:wq_nml_file is the filepath and filename for an external water quality model namelist. &amp;glm_morphometry:H is a list of some of the heights of the lake. &amp;glm_morphometry:A is a list of some of the areas of the lake, at the same layers listed in H. &amp;time:timefmt is a switch for the time setup: either number of days (= 3) or start and stop days (= 2). &amp;time:start and stop are the dates to start and stop (timefmt = 2). &amp;time:num_days is the number of days for a simulation (timefmt = 3). &amp;output:csv_point_nlevs is the number of csv_point_at depths to use, as listed left to right. &amp;output:csv_point_at is a list of the depths (m) from the bottom at which an output csv file is written. &amp;output:csv_point_vars is a list of the simulated variables to write to the output csv. &amp;output:csv_point_nvars is the number of csv_point_vars to use, as listed left to right. &amp;init_profiles:num_depths is the number (integer) of depths to set for the initial profile. &amp;init_profiles:the_depths are the depths (m) of the initial profiles, where other features are configured, from bottom to top. &amp;init_profiles:the_temps are the initial temperatures at the_depths. &amp;init_profiles:the_sals are the initial salinity at the_depths. &amp;inflow:num_inflows is a number (integer) of inflowing streams. &amp;inflow:inflow_fl is a list of the file names for the inflowing streams. &amp;inflow:inflow_vars is a list of variables to be taken from the inflow files. &amp;outflow:num_outlet is a number (integer) of outflowing streams. &amp;outflow:outflow_fl is a list of the file names for the outflowing streams. &amp;outflow:outflow_fl is a list of the file names for the outflowing streams. GLM plot window file: plots.nml The plots.nml text file configures the automatic plot window that runs during the simulation. The x axis is time, the y axis is lake depth layer and the z axis (colour bar) is the scale of the variable, for example concentration. The user can configure the plot window using the following: &amp;plots_window:width and height set the dimensions of the plotting window (mm). &amp;plots:plot_width and plot_height set the dimensions of the individual plots (mm). &amp;plots:title is a list of the titles displayed above each plot. &amp;plots:vars is a list of the GLM or AED variables for each plot, in the same sequence as title. &amp;plots:min_z and max_z set the minimum and maximum values for each of the variables, in the same sequence as title. Boundary files Boundary .csv files can be found in the ‘inputs’ or ‘bcs’ (boundary conditions) directory. The exact names and paths are listed in the glm3.nml block &amp;inflow, &amp;outflow and &amp;meteorology. Inflow files The simulated lake may have streams or rivers flowing into it. If so, one time series boundary .csv file is used for each inflow stream. The rows of the csv are time steps and the columns are inflowing variables, such as flow volume, salinity and oxygen. The file names are listed in inflow_fl and the model will read them in from left to right according to the number set in num_inflows. Outflow files In a similar way to the inflow files, the simulated lake may have streams or rivers flowing out of it. If so, one time series boundary .csv file is used for each outflow stream. The rows of the csv are time steps and the columns are outflowing variables, such as flow volume, salinity and oxygen. The file names are listed in outflow_fl and the model will read them in from left to right according to the number set in num_outlet. Meteorological file One meteorological file sets conditions at the surface of the lake, i.e. the water-atmosphere boundary. It includes values such as air temperature, wind speed and light. The file is also a time-series boundary, with rows as time steps and columns as each boundary variable. It often has a name like ‘met.csv’. AED water quality model files If an external water quality model is being used, it will be specified with the parameter &amp;wq_setup: wq_lib, for example, ‘aed’. The parameters for the water quality model are specified by a file and file path in wq_nml_file, for example, ‘aed/aed.nml’. GLM output files Once GLM is running, it will write its results to several different output files. Output Netcdf The results of all variables at all time steps and depths are written to the netcdf file. This file may have a size of hundreds of MB or GB. The file can be accessed with Matlab or R packages that have been created to organize these large file types. General lake .csv One csv is written for each simulation. The file name is set with the parameter &amp;output: csv_lake_fname, for example ‘lake.csv’. This file contains values that apply to the whole lake, such as lake volume, lake level and surface temperature. If this file is open in a program such as Excel, the GLM program cannot overwrite the file. Close the .csv or save it with a different file name before running the model again. A list of the variables contained in the lake .csv can be found here. The table ‘2D variables from lake.csv’ lists the variables, a description and the units of each. This .csv is especially useful for calculating the water balance and heat balance of the lake. Depth-specific .csv Profiles can be output at specified depths, using &amp;output: csv_point_fname and csv_point_at. For example, if csv_point_fname is ‘WQ’ and csv_point_at is 1, 5, 12, then the model will create files ‘WQ_1’, ‘WQ_5’ and ‘WQ_12’. The variables for this file are listed in the parameter csv_point_vars. This file can be used to access output data at one depth more easily than via the netcdf file. Plot window You can save the plot window as a .png image file by hitting the Save buttons. The plot window will overwrite any previous files each time you do this, so rename the file or save it to a different folder each time. "],["running-glm.html", "Running GLM Simulation workflow Running GLM (Suggested Method) Running GLM (Alternative Method) Visualising Results", " Running GLM Simulation workflow Running GLM (Suggested Method) Install Visual Studio Code Visual Studio Code (VSC) is a convenient tool for editing and running GLM in an integrated environment. Begin by downloading VSC here. Open the WarmLake Directory in VSC Launch VSC and click the Explorer button then Open Folder. Next, navigate to the WarmLake directory and click Open. Enable Syntax Highlighting and Open a .nml File GLM’s WarmLake simulation can be configured by editing it’s .nml text files in VSC. For better legibility when editing a .nml, enable Fortran syntax highlighting. Click on the Extensions button and search for the Fortran extension to install. Once installed, click on the Explorer button again and open the glm3.nml file. In the bottom right-hand corner, click on Plain Text and search for Fortran - Modern. Run GLM To launch GLM, first open a new terminal session from VSC’s menu bar. Depending on your operating system, the commands to run the simulation will differ: MacOS/Linux Begin by typing chmod +x run_glm.sh in the terminal and press Enter. This will enable executable permissions for the shell script that launches GLM. You only need to run chmod +x run_glm.sh once! Subsequent launches of GLM will not require this command to be executed. Next, run the GLM shell script by entering sh run_glm.sh into the terminal prompt. You’ll then be prompted to select which GLM plotting script will be used to visualise the model’s outputs as it runs. Enter 1 and the simulation will launch with the basic visualisation configuration (temperature and salinity). Your Mac may block opening GLM the first time you run it. If this occurs, go to your Security options inside System Preferences and click ‘Open Anyway’. Then re-run sh run_glm.sh in VSC’s terminal. Once the simulation has finished, click Done and return to the terminal to either re-run the model or quit (option 4). Windows Open a new terminal. Next, run the GLM script by entering .\\run_glm.bat into the terminal prompt. Once the simulation has finished, click Done and return to the terminal to either re-run the model or quit. Running GLM (Alternative Method) Running GLM on Windows On Windows, the model can be run by double-clicking the batch-file run_glm.bat, which you can open from in the simulation directory (e.g. warmlake folder). The .bat file calls the GLM model from the current working directory, and should be located where the `glm.nml’ file is. ..\\GLM\\win\\glm_3.3.0\\glm.exe --xdisp echo press any key pause If the model is not opening make sure that you are not working from a network directory (e.g. OneDrive) and the file path to the run_glm.bat file has zero spaces in it. Running and editing GLM with Visual Studio Code Batch Runner extenstion on windows Click ‘Extensions’ on left panel, search ‘Batch Runner’ Install the Batch Runner extenstion Open the GLM case study folder (e.g. TropicalReservoir) by clicking File –&gt; Open Folder open the run_glm.bat batch-file, click the Run symbol (see figure below) to run GLM Open the glm3.nml by clicking the file name on the left file list panel, for viewing and editing the GLM configuration file You can now edit the glm3.nml file to change your configurations and run GLM in a same environment to see the changes in the outputs If you are new to Visual Studio Code and the software is being run for the first time, you would need to install the following extensions: NewGRF Meta Language extension for better visualising and editing nml files; Batch Runner extenstion to run the batch file Visualising Results Depending on your preference for visualisation software, both Excel and R can be used for the plotting of GLM’s general lake or depth-specific csv outputs. R is required for visualising NetCDF outputs. Excel R # Load packages library(tidyverse) library(lubridate) read_csv(&quot;plots/processing-outputs/WQ_5.csv&quot;) %&gt;% # Read GLM csv mutate( time = as_datetime(time, format = &quot;%Y-%m-%d %H:%M:%S&quot;) # Format date/time ) %&gt;% ggplot(mapping = aes(x = time, y = temp)) + # Plot with ggplot() geom_line(colour = &#39;red&#39;) + labs(x = &quot;Date&quot;, y = &quot;Temperature (°C)&quot;) + theme_classic() "],["WaterBalance.html", "1 Water Level &amp; Balance", " 1 Water Level &amp; Balance The water balance is the sum of all water entering and leaving the lake (equation (1.1)). \\[\\begin{eqnarray} \\frac{\\Delta Storage}{\\Delta time} = Rainfall + Snow + Local \\ \\ runoff + River \\ \\ inflow \\\\ - Evaporation - Withdrawal - Overflow - Seepage \\tag{1.1} \\end{eqnarray}\\] The lake.csv file can be used to calculate the change in water storage over the course of the simulation. Copy the water balance columns from lake.csv to your own spreadsheet. Calculate the total water balance in a new column. You can find the list of the variables on this page. Plot the lake water balance – volume, water level and fluxes including inflows, outflows, rainfall and evaporation. Examining components of the water balance: Computing the daily surplus or deficit: Remember to label all the variables and units that you plot. Close the lake.csv file before you run the model again. "],["WaterHeatingAndStratification.html", "2 Water Heating &amp; Stratification 2.1 Energy Balance 2.2 Lake Stratification", " 2 Water Heating &amp; Stratification 2.1 Energy Balance The energy balance is the sum of all energy entering and leaving the lake (Equation (2.1)). \\[\\begin{eqnarray} \\frac{\\Delta Energy}{\\Delta time} = + φ_{SW} + φ_{H} + φ_{LW} + φ_{E} \\tag{2.1} \\end{eqnarray}\\] where \\(φSW\\) is the flux of shortwave radiation into the lake and all units are in W m-2. In the lake.csv file, this appears as Daily Qsw. \\(φH\\) is the sensible heat flux (Daily Qh). \\(φLW\\) is the sum of longwave radiation into and out of the lake (Daily Qlw). \\(φE\\) is the latent heat flux (Daily Qe). The output lake.csv file calculates whether these are positive (energy gains into the lake) or negative (energy losses from the lake) and will display these as positive or negative, respectively. Save the data in lake.csv as a new xls spreadsheet. Plot the surface heat fluxes and the total energy balance over time. Set the axes so that the incoming energy fluxes are positive and outgoing are negative; a stacked area plot is often a useful way to summarise. 2.2 Lake Stratification A lake is ‘stratified’ if it has a large difference between the top and bottom for a variable such as temperature or salinity. Stratification is usually created by sunlight making surface water warm and buoyant. Wind events and prolonged periods of surface cooling lead to mixing and can break the stratification. GLM uses many layers to resolve the vertical temperature and salinity profiles over the water column depth. Inspect the depth-time contour plots in the GLM plotting window to examine the nature of stratification in the case study simulation(s). Do you see any seasonal patterns in the temperature differences between the top and the bottom? Is this reflected in any variables other than temperature? Outputing variables at multiple depths: We can configure GLM to look in more depth the nature of differences between the upper and lower layers. Go to the &amp;output (not &amp;outflow!) section of glm3.nml and customize the configuration to make two depth-specific output files, one at 5 m from the bottom (ie. in the lake hypolimnion) and one at 35 m from the bottom (i.e. in the lake epilimnion). Use the parameter csv_point_at to set the depths, from the bottom, at which the model will write .csv files. This will create two .csv files (WQ_5.csv and WQ_35.csv) with conditions at these water depths. Make sure number of levels that you output (csv_point_nlevs) is set to the number of output .csvs that you want. !------------------------------------------------------------------------------- ! format for output and filename(s) !------------------------------------------------------------------------------- &amp;output out_dir = &#39;output&#39; out_fn = &#39;output&#39; nsave = 24 ! This will output every 24 hours !- General summary file csv_lake_fname = &#39;lake&#39; !- Depth specific outputs csv_point_nlevs = 2 ! # of depth-specific output files csv_point_fname = &#39;WQ_&#39; ! prefix for files csv_point_at = 5.,35. ! depths (above bottom) for output csv_point_nvars = 4 ! number of columns to write csv_point_vars = &#39;temp&#39;,&#39;salt&#39;,&#39;PHS_frp&#39;,&#39;NIT_amm&#39; / Save the glm3.nml and run the model again. Find the new output .csv files in the output folder. Copy the data to a new Excel spreadsheet. Calculate the temperature difference between the top and the bottom. Identify the time periods where the lake is stratified and mixed. If an output file is open in Excel, the GLM program cannot overwrite the file. Close the .csv or save it with a different file name before running the model again. "],["updating-initial-height-conditions.html", "3 Updating Initial Height Conditions", " 3 Updating Initial Height Conditions The height of the water in the lake at the first time step is set in &amp;init_profiles: lake_depth. Consider this: what would happen if all the environmental boundary conditions were the same, but the initial storage were half as much? Decrease your lake_depth to 50% of the value you started with. Examine the results in the GLM plotting window and compare them to the original simulation. Create an output profile just below the surface. For example, if your initial height is 21 m, create csv_point_at files at 5 m and 17 m from the bottom. Calculate the temperature difference between the top and the bottom, as in the previous exercise. Describe the effect on stratification of having a shallower lake. If a csv_point_at depth is listed but it is greater than the initial depth of the lake, no output value can be written and the model will not work. Similarly, the initial profiles (the_depths) need to be within the new depth of the lake. For future activities make sure you change back to the original height. "],["error-assessment.html", "4 Error Assessment Mean Absolute Error (MAE)", " 4 Error Assessment Mean Absolute Error (MAE) Mean absolute error measures the average absolute difference between the simulated and the observed results. It is calculated by summing the absolute error between paired values (i.e. modelled and actual) and dividing by the number of observations: \\[\\begin{equation} MAE = \\frac{\\sum_{i}\\left | T_{i}^{sim}-T_{i}^{obs} \\right |}{n} \\tag{4.1} \\end{equation}\\] Calculate the mean absolute error in the simulation for the lake surface temperature (Surface Temp in lake.csv), comparing it to a dataset of observed temperature data for the same time period (data/ObservedTempData.csv). In Excel, in a new column, calculate the absolute difference between daily simulated and observed lake temperature for each time step (each row), then calculate the overall average of these differences. "],["adding-water-quality-models.html", "5 Adding Water Quality Models", " 5 Adding Water Quality Models Now lets turn our attention to the water quality / ecology part of the case-study simulation. Both the WarmLake and TropicalReservoir case-studies have the AED model pre-configured. A schematic (conceptual model) of the interactions being simulated in the AED module are shown below. Activate the water quality AED modules by making sure the &amp;wq_setup block is ready and uncommented, and the wq_lib = ‘aed’ entry is set. Make sure glm3.nml can find another namelist file aed.nml to configure the water quality model parameters, using the &amp;wq_setup parameter wq_nml_file. The above simulation was only plotting temperature and salinity and these plots were configured in plots.nml. Open plots.nml to see how you can customise the graphs. There are many other variables we may be interested in plotting when we run the watter quality model such as oxygen, nutrients, and algae. A pre-configured file called plots_aed.nml has been created. To use this file you simply need to add plots_aed.nml after the call to glm –xdisp in the mac terminal or the Windows batch file (right click and open the batch file with a text editor). In plots_aed.nml the required variables are all listed, make sure the number of plots is high enough to include them all, and feel free to customise the settings. Table 5.1: Water quality variables and their descriptions. Description Variable Name Passive tracer TRC_tr1 Water age TRC_age Suspended solids NCS_ss1 Dissolved oxygen OXY_oxy Dissolved inorganic carbon CAR_dic pH CAR_pH Methane (dissolved) CAR_ch4 Methane (bubbles) CAR_ch4_bub Reactive Silica SIL_rsi Ammonium NIT_amm Nitrate/Nitrite NIT_nit Phosphate PHS_frp Particulate inorganic phosphorus PHS_frp_ads Dissolved organic carbon OGM_doc Particualte organic carbon OGM_poc Dissolved organic nitrogen OGM_don Particulate organic nitrogen OGM_pon Dissolved organic phosphorus OGM_dop Particulate organic phsophorus OGM_pop Green algae PHY_green Green algae PHY_green_IN Green algae PHY_green_IP Diatoms PHY_diatom Diatoms PHY_diatom_IN Diatoms PHY_diatom_IP Cyrptophytes PHY_crypto Cyrptophytes PHY_crypto_IN Cyrptophytes PHY_crypto_IP Zooplankton ZOO_zoo01 Add water quality variables to the specific depth output files (i.e. WQ_5.csv). To do so we must edit the output section of the glm3.nml file, by adding the variables as extra columns to the WQ_x.csv files that were configured earlier If they are there already, make sure that the number of variables nvar is high enough to include them all. ol > li > ol > li {list-style-type:lower-alpha} As an example of output water quality variables, let’s plot all the nitrogen variables. Change csv_point_vars to include NIT_amm, NIT_nit, OGM_don, OGM_pon, PHY_green_IN - these are all the variables that contribute to the total nitrogen (TN) pool. Now re-run the model (e.g. Windows users double clicking glm.bat again). Once it’s run open WQ_35.csv to see these new variables and create a stacked area plot to show how the different variables contribute to TN. Create a well formatted, interesting graph of variables of your choice (for example, you may like to consider all of the phytoplankton groups or create sums of these to generate a NPZD model) to see how they interact and change over time. If any variables are much bigger or smaller than the others, then use two y-axes or multiple plots. "],["sensitivity-index-si.html", "6 Sensitivity Index (SI)", " 6 Sensitivity Index (SI) Calculating a sensitivity index allows the impact of changing an independent variable (e.g. a model parameter) to be assessed on a dependent variable. Another way to think of this is how much does an output change if I change an input? Given all other variables are held constant, the SI is computed by dividing the percentage change in the simulated result (i.e. the output) by the percentage change of the input parameter: \\[\\begin{equation} SI = \\frac{(Output_{new}-Output_{original})/Output_{original}}{(Parameter_{new}-Parameter_{original})/Parameter_{original}} \\tag{6.1} \\end{equation}\\] If there is a large change in the output variable, we say that the variable is sensitive to the parameter. If there is a small change in the output variable, we say the variable is not sensitive to the parameter. In this exercise we will compare the sensitivity of the water temperature and algae concentration to the mean wind speed, and the water clarity. Calculate the sensitivity of the modelled temperature to changes in water clarity (the light extinction coefficient, \\(K_w\\)) and wind speed (wind_factor). These can be found in glm3.nml: &amp;light and &amp;meteorology, respectively. Try increasing and decreasing the default parameter value by 0.2 (Kw) and 0.3 (wind) and see how much the output changes. Using the SI calculation on the simulation output, assess how sensitive the water temperature and phytoplankton biomass is to water clarity (Kw): GLM results Water clarity Decrease 0.37 Water clarity Original 0.57 Water clarity Increase 0.77 Average WQ_35 temperature Average WQ_35 phytoplankton (green, crypto, diatom) biomass Assess how sensitive the temperature and phytoplankton biomass is to wind speed (wind_factor): GLM results Wind Speed Decrease 0.6 Wind Speed Original 0.9 Wind Speed Increase 1.2 Average WQ_35 temperature Average WQ_35 phytoplankton (green, crypto, diatom) biomass Are the water variables more sensitive to the change in wind, or the change water clarity? "],["warming-air-scenario.html", "7 Warming Air Scenario", " 7 Warming Air Scenario A common application using GLM is to undertake scenarios to assess how conditions might change in a warmer world. For example, how would stratification and water quality concentrations change if the air temperature increased by 2 °C? This can be achieved by altering the boundary condition files, such as the meteorology and inflow files, to represent this type of climate change scenario. Check whether your simulation package has a pre-made version of the meteorology file in the bcs folder, with the air temperature increased by 2 °C. For example, the file may be called met_1997_2004_airT2.csv. To use this file, update meteo_fl = 'bcs/met_1997_2004.csv' in the &amp;meteorology section of glm3.nml. Or alternatively you can edit the met_hourly.csv file to reflect these conditions. Open the met file in Excel and alter the conditions (e.g. add 2C to the air temperature) and then re-save the file as a new met csv file. Make sure to save with correct date format, taking note these met measurements are recorded hourly, so use the format YYYY-MM-DD hh:mm. !------------------------------------------------------------------------------- ! meteorology !------------------------------------------------------------------------------- &amp;meteorology met_sw = .true. lw_type = &#39;LW_IN&#39; rain_sw = .false. atm_stab = 0 fetch_mode = 0 !rad_mode = 1 albedo_mode = 1 cloud_mode = 4 !-- BC file details subdaily = .true. meteo_fl = &#39;bcs/met_1997_2004.csv&#39; !&lt;---- UPDATE THIS LINE TO READ THE NEW FILE wind_factor = 0.9 lw_factor = 1.0 lw_offset = 0.0 !-- Parameters ce = 0.0013 ch = 0.0013 cd = 0.0013 / Once you have successfully updated the GLM configuration to use the new air temperature boundary condition, examine the surface water temperature and phytoplankton outputs and compare them to the baseline scenario. This can be done by creating a time-series plot comparing the two simulations, and computing the mean difference between the two. "],["changing-morphometry.html", "8 Changing Morphometry", " 8 Changing Morphometry The lake shape will influence the water balance and pattern of vertical stratification. The lake’s shape in GLM is resolved using a hypsographic curve - that is the relationship between height and wetted area. This is captured in the glm.nml &amp;morphometry section. Edit the heights and areas of the lake using &amp;morphometry: H and A. Remember that the first area must be 0 m2 and that all of the heights and areas must be monotonically increasing. Create a very steep-sided lake or a very shallow lake. Compare the degree of stratification with your original simulation. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
